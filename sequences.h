//  Kevin has made some changes to the program and need to update this file as of 11-14-15
//  Nick Added Golfer at Slot # 94&95 on 11-14-15
//  Sending this to Kevin to compile for me on 11-12-15 5PM
// This has the Golfer seq back fr Kevin and I am adding 5 more seq as of 11-12-15
// This is the program that I have been using to Update the Seq # for 8TP
//  I am giving this file to Kevin to rearange the sequences in slot# order. 10-8-14 
//******************************************************
// This is the Up to date  8TSC patterns. as of 12-04 and 10-07
//   seqUENCE TABLES FOR CHASER 125 sequences est.
//   This is the file that Kevin used to program the 8TSC for 2013
// Nick is going to use this to rearrange the seq # to use for the 
//  Programmable controllers for the 2014 seqson as of 9-7-14
//  I made some changes to the sequences from the 2013  before
//    I made this file to rearange the seq # for the 2014 4,6&8TP controllers
//  This is the file I got back from Kevin but I never finished it.
//  I will do that now  11-5-15 and give the file back to Kevin
//******************************************************
//------------------------------------------------------
//  REVISION HISTORY
//
//  1st-try.H            2598 lines  as of 10-27-99
//  991110   KLC   Modified seq220, 252 for build-up
//  991111   ND    Lots of changes
//  991114   ND    Added Version 2s for Back & Forth
//                 and both chase w/ delay on one and
//                 with chase w/ delay on 1 and last.
//  000208   ND    Slowed down a lot of sequences. Add
//                 Version 2 to Chase W delays on 1&last
//  000303   ND    Cont. to slow down seq.
//  000411   ND    Added seq #33 Special#1 Baseball
//  000411   ND    Added a seq for Dump Truck for CAD
//                 seq #158 4T Build Up V2.
//  000522   ND    Added seq #65 special #2 Golfer
//  000531   ND    Added seq #97 Special #3 Throwing
//  000601   ND    Added seq #129 Spec #4 Snowball fight
//  000601   ND    Added seq #161 Spec #5 2 Arm Tennis
//  000601   ND    Added seq #193 Spec #6 3 Arm Tennis
//                 ,1 still available
//  000913   ND    Added seq #225 Spec #7 Cannon
//  000604   ND    Add 8T on for last 2 steps of 4,5,6,7TCV2
//                    seq# 162,194,226
//  000715   ND   On 3&4T Multi, Doubled the pattern
//  000921   ND   Chase Ver.3  Added throwing seq to 3T-7T
//  001023   ND   Added 4T Neg Chase Ver3 All 8 tracks seq#133
//  001101   ND   Added 4T Multi Ver3 for Carosel seq#155 and slower Chase 187
//  001110   ND   Added 8TC to left for seq #255 to test dipswitch setting 11111111
//  001110   ND   Added Special #8 Fishing seq #67 Setting 01000011
//  001212   ND   On 6T Multi Ver1 made Track 7&8 on all the time.
//  010427   ND   Added Special #9 Bowler seq #1 Setting 00000001
//  010731   ND   Having a problem with this program on 7-31-01
//                Kevin changed program to give me more steps.8-3-01
//  010926   ND   Fixed a problem W 7TBuild up seq #252 1/2 time it would not turn
//                  off #1 befor repeating.
//  011004   ND   Added 8T Build Up & Dn Ver2. seq #26 Cascade, Walking ???11010
//  011005   ND   Added Build Up/Dn Cascade for all 4 & 6T chase modes seq 154&218
//  011005   ND   Doubled the 3&4TC Pattern seq #128& #96
//  011110   ND   Added Special #13 Golfer 2 seq #195 W/3Back clubs& 5 balls 11000011
//                      special Golfer is for Light Works 
//  011124   ND   Added 1TC to 7T Build Up and Dn seq # 248  setting 11111000
//  011124   ND   Added 2TC to 4,5&6T Build Up & Down # 152, 184 & 216 Ver 1
//  011124   ND   Added Fast 3TC and Med 2TC to 3T Build Up & Dn seq 120, 01111000 
//  011201   ND   Added T7 on except when T1 is on, T8 on except when Last Track is on
//                 on all Back and Forth patterns from 3 to 7 track patterns.
//  092502   ND   Even the chips with the 8K smallest memory, All of the patterns 
//                work OK except the last seq #255 8t Chase to the left, used to
//                test the dip switch slides.  11111111 = #255
//  021017   ND   10-17-02 Added a special Golfer seq for Light Works #195  11000011
//    Next changes add Build Up & Dn Ver3 W No Delay on All On For Lou Ossip            
//  042103   ND   seq 64 2TC V2 added steps to slow it down to a Max of 6 sec per step.
//  092903   ND   Added Ver2 Cannon 3Pos arm and 5 balls seq 62 setting 00111110
//  111203   ND   Added more steps to all chase VER2 except 8TC to slow down to 6 sec.
//  071704   ND   Added an All On seq.#3 00000011 7-04 as part of the permenent program.
//  111904   ND   Deleted the 7TC W/delay on 1 and 7 Ver 2   seq 246 to make room.    
//  042406   ND   Modified all Neg Chase seq. W/Only 1 step to run faster.
//  090106   ND   Fixed seq 154&218 4&6 Build Up & Dn. Ver2 5&7T seq disconected.
//  140930   ND   This is the file for the 8TP rearanged seq order for rotary dip switches almost done.
//  140210   ND   Kevin will rearange the sequences in slot# order.   10-2-14
//  140219   ND   Nick just added a 2,3,4,6&8 T Multi seq all with 112 steps to be in sync with each other.
//  141004   ND   1 color Multi Seq V2 Seq # 137,138,139,141,143
//  141007   ND   added speller seq V2 and 2 Color Multi Sequences 2,6 & 8 track
//  141008   KC   Kevin is going to rearange the Seq into Sequence order today  
//  141009   KC   Kevin rearanged the sequences and returned the file to me to be proofed. 10-9-14 
//  151105   ND   Proofing the seq numbers.
//  151112   ND   Added 5 programmable 16 track sequences Slot # 32&33, 48&49, 64&65, 80&81, 92&53
//  151114   ND   Nick Added Golfer at Slot # 94&95 on 11-14-15
//                Kevin has made some changes to the program and need to update this file as of 11-14-15
//--------------------------------------------------------------------------------
//*********************************************
//            SEQUENCE TABLES
//
//  These tables are made up of a series of
//  bytes.  Each byte represents one step of
//  a sequence.  The bits of each byte
//  represent one of the corresponding tracks
//  of the chaser.
//
//*********************************************

const byte sequence0[] = {
//* delete 3 from 100                   p3
    B00000000
};

const byte sequence1[] = {
//  delete  from 164                   P5
    B00000000
};


const byte sequence2[] = {
// 2 track Negitive Chase  V1    P68
    B10000000,
    B01000000
};

const byte sequence3[] = {   
// 3T Negitive Chase                  P100
    B01100110,
    B10101010,
    B11001100
};

const byte sequence4[] = {
// 4T Negitive Chase 1 out Version 1    1X     P132
    B01110111,
    B10111011,
    B11011101,
    B11101110
};

const byte sequence5[] = {
// 5T Negitive Chase 1 out Version 1    1X      P164
    B01111000,
    B10111000,
    B11011000,
    B11101000,
    B11110000
};

const byte sequence6[] = {
// 6T Negitive Chase 1 out Version 1   1X      P196
    B01111100,
    B10111100,
    B11011100,
    B11101100,
    B11110100,
    B11111000
};

const byte sequence7[] = {
// 7T Negitive Chase 1 out Version 1     P228
    B01111110,
    B10111110,
    B11011110,
    B11101110,
    B11110110,
    B11111010,
    B11111100
};

const byte sequence8[] = {
// 8T Negitive Chase 1 out   1Step per Track    P4
    B01111111,
    B10111111,
    B11011111,
    B11101111,
    B11110111,
    B11111011,
    B11111101,
    B11111110
};

const byte sequence9[] = {
    B00000000
};   

const byte sequence10[] = {
    B00000000
};


const byte sequence11[] = {
// 4T Negitive Chase 2 out Version 2   1X       P134
    B00110011,
    B10011001,
    B11001100,
    B01100110
};

const byte sequence12[] = {
// 5T Negitive Chase 2 out Version 2   1X       P166
    B00111000,
    B10011000,
    B11001000,
    B11100000,
    B01110000
};

const byte sequence13[] = {
// 6T Negitive Chase 2 out Version 2    1X       P198
    B00111100,
    B10011100,
    B11001100,
    B11100100,
    B11110000,
    B01111000
};

const byte sequence14[] = {
// 7T Negitive Chase 2 out Version 2    1X      P230
    B00111110,
    B10011110,
    B11001110,
    B11100110,
    B11110010,
    B11111000,
    B01111100
};

const byte sequence15[] = {
// 8T Negitive Chase 2 out  Version 2  2Tracks Out  1X     P6
    B00111111,
    B10011111,
    B11001111,
    B11100111,
    B11110011,
    B11111001,
    B11111100,
    B01111110
};

const byte sequence16[] = {
//delet 7 from 228                     P7
    B00000000
};

const byte sequence17[] = {
    B00000000
};

const byte sequence18[] = {
// two track chase       P64
    B10100000,
    B01010000
};

const byte sequence19[] = {
// three track chase         P96
    B10010000,
    B01001000,
    B00100100
};

const byte sequence20[] = {
// four track chase       P128
    B10001000,
    B01000100,
    B00100010,
    B00010001
};

const byte sequence21[] = {
// five track chase          P160
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000
};

const byte sequence22[] = {
// six track chase                   P192
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100
};

const byte sequence23[] = {
// seven track chase    P224
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010
};

const byte sequence24[] = {
// eight track chase   Version 1      P0  
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001
};

const byte sequence25[] = {

// two track chase  Version 2  Slow Chase. Added 6 more steps to slow it
// down from a max of 3 sec to a max of 6 sec. Had 6 steps, now 12 steps.
// and used some extra tracks as backups.     P66
    B10001100,
    B10001100,
    B10001100,
    B10001100,
    B10001100,
    B10001100,
    B10001100,
    B10001100,
    B10001100,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B01000011
};

const byte sequence26[] = {
// three track chase  Version 2  Slow Chase on 11-03 changed fr 6 steps to 12.
//  added Throwing seq to this  T8 comes on for step 2&3      P98
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01011001,
    B01011001,
    B01011001,
    B01011001,
    B01011001,
    B01011001,
    B01011001,
    B01011001,
    B00111101,
    B00111101,
    B00111101,
    B00111101,
    B00111101,
    B00111101,
    B00111101,
    B00111101
};

const byte sequence27[] = {
// four track chase  Version 2  Slow Chase on 11-03 slowed it down to 12 steps.   
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B01000100,
    B01000100,
    B01000100,
    B01000100,
    B01000100,
    B01000100,
    B01000100,
    B01000100,
    B01000100,
    B01000100,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001
};

const byte sequence28[] = {
// five track chase  Version 2  Slow Chase
// Added T8 on With step 4&5  added 6 more steps on 11-03      P162
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001
};

const byte sequence29[] = {
// six track chase  Version 2  Slow Chase on 11-03 made 2X as slow as it was.
// added 8T on for step 5&6        P194
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101
};

const byte sequence30[] = {
// seven track chase  Version 2  Slow Chase  added another 6 steps on 11-03
// added 8T on for step 6&7     P226
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011
};

const byte sequence31[] = {
// eight track chase  Version 2  Slow Chase  6X need to add 6 more steps to each
//  shift of the chase. Allready done for all 6 of the other chase Ver 2  11-12-03   P2
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001
};

const byte sequence32[] = {
// --------------------------------Temp seq For Basetball Dunk- T1-8 ----------------------------------------------------32&33
    B10000000,
    B10000000,
    B10000000,
    B01100000,
    B01011000,
    B01010100,
    B01010010,
    B01010001,
    B01010000,
    B01010000
};

const byte sequence33[] = {
//  Tracks 9-16 for Basketball Dunk
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B10000000,
    B10000000
};

const byte sequence34[] = {
// 2T Chase W/3X delay on #1    step X5       P80
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000
};

const byte sequence35[] = {
// 3T Chase W/delay on #1   Version 1  4X Delay   Step X5      P112
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000
};

const byte sequence36[] = {
// 4T Chase W/delay on #1   Ver.1  4X delay  Steps X5     P144
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000
};

const byte sequence37[] = {
// 5T Chase W/delay on #1   Ver.1 W/4X delay   Steps X5      P176
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000
};

const byte sequence38[] = {
// 6T Chase W/delay on #1   Ver.1   W/4X Delay    Steps X5    P208
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100
};

const byte sequence39[] = {
// 7T Chase W/delay on #1   Ver.1   W/4X dealay  Steps X5    P240
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010
};

const byte sequence40[] = {
// 8T Chase W/delay on #1   Ver.1  W/4X delays   Steps X5     P16
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001
};

const byte sequence41[] = {
// 2T Chase W/delay on #1  Ver.2  W 8X delays  
// W/2TC & 3PA Slow Step X7       P83
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10010001,
    B10010001,
    B10010001,
    B10010001,
    B10010001,
    B10010001,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10010001,
    B10010001,
    B10010001,
    B10010001,
    B10010001,
    B10010001,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000
};
 

const byte sequence42[] = {
// 3T Chase W/delay on #1  Ver.2 W/6 X delays  
// W/2TC & 3PA Slow  Steps X7           P115
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10010001,
    B10010001,
    B10010001,
    B10010001,
    B10010001,
    B10010001,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000
};

const byte sequence43[] = {
// 4T Chase W/delay on #1   Ver.2  6X delay   
// W/2TC Slow  Steps X7      P147
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000
};

const byte sequence44[] = {
// 5T Chase W/delay on #1  Ver.2 W/ 6X delay  W/2TC slow  Steps X7      P179
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000
};

const byte sequence45[] = {
// 6T Chase W/delay on #1   Ver.2  W/6X Delay  W/2TC slow  Steps X7    P211
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100
};

const byte sequence46[] = {
// 7T Chase W/delay on #1   Ver.2   W/6 X dealay  
// W/1TC Slow  Steps X7      P243
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000000,
    B10000000,
    B10000000,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000000,
    B10000000,
    B10000000,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000000,
    B10000000,
    B10000000,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000000,
    B10000000,
    B10000000,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010
};

const byte sequence47[] = {
// 8T Chase W/delay on #1   Ver.2  W/6X delays  Steps X5     P19
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001
};

const byte sequence48[] = {
//----------------------------For Fieldgoal Kick  14 steps-----For Erma - 2 Legs in front of Standing foot---------48&49
    B00100000,
    B00100000,
    B00100000,
    B10100000,
    B01010000,
    B01001000,
    B01000100,
    B10000010,
    B00000001,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};  

const byte sequence49[] = {
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B10001000,
    B01001000,
    B00100100,
    B00010100,
    B00010100
};

const byte sequence50[] = {
// 2T Chase W/delay on 1st & Last    W/4X delay    step X5     P84
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000
};

const byte sequence51[] = {
// 3T Chase W/delay on 1st & Last  Ver.1  W/4X delays  Step X5   P116
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000
};

const byte sequence52[] = {
// 4T Chase W/delay on 1st & Last  Ver.1  W/4X delay   Step X5     P148
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000
};

const byte sequence53[] = {
// 5T Chase W/delay on 1st & Last  Version 1 W/4 X delay    Step X5
//                Track 7&8 to switck 1 time on step 1                     P180
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000
};

const byte sequence54[] = {
// 6T Chase W/delay on 1st & Last   Version 1  W/4X delay    step X5
//      Add track 7&8 switck one time on step 1     P212
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100
};

const byte sequence55[] = {
// 7T Chase W/delay on 1st & Last   Ver.1  W/4X delay   step X5
//    Add track 8 comes on 1/2 way through step one, then off after step 1.   P244
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010
};

const byte sequence56[] = {
// 8T Chase W/delay on 1st & Last  Ver.1  6X delay  Step X7    P20
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001
};

const byte sequence57[] = {
// 2T Chase W/delay on 1st & Last  Ver.2  W/6X delays  
// W/2TC on Step#1,Slow and Fast      P86
    B10010010,
    B10010010,
    B10010010,
    B10010001,
    B10010001,
    B10010001,
    B10001010,
    B10001010,
    B10001010,
    B10001001,
    B10001001,
    B10001001,
    B10010010,
    B10010010,
    B10010010,
    B10010001,
    B10010001,
    B10010001,
    B10001010,
    B10001010,
    B10001010,
    B10001001,
    B10001001,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000
};


const byte sequence58[] = {
// 3T Chase W/delay on 1st & Last  Ver.2  W/6X delays  
// W/2TC on Step#1,Slow and Fast  
// W/1TC on Step#3 track 6             P118
    B10010010,
    B10010010,
    B10010010,
    B10010001,
    B10010001,
    B10010001,
    B10001010,
    B10001010,
    B10001010,
    B10001001,
    B10001001,
    B10001001,
    B10010010,
    B10010010,
    B10010010,
    B10010001,
    B10010001,
    B10010001,
    B10001010,
    B10001010,
    B10001010,
    B10001001,
    B10001001,
    B10001001,
    B10010010,
    B10010010,
    B10010010,
    B10010001,
    B10010001,
    B10010001,
    B10001010,
    B10001010,
    B10001010,
    B10001001,
    B10001001,
    B10001001,
    B10010010,
    B10010010,
    B10010010,
    B10010001,
    B10010001,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100100,
    B00100100,
    B00100100,
    B00100000,
    B00100000,
    B00100100,
    B00100100,
    B00100100,
    B00100000,
    B00100000,
    B00100100,
    B00100100,
    B00100100,
    B00100000,
    B00100000,
    B00100100,
    B00100100,
    B00100100,
    B00100000,
    B00100000,
    B00100100,
    B00100100,
    B00100100,
    B00100000,
    B00100000,
    B00100100,
    B00100100,
    B00100100,
    B00100000,
    B00100000,
    B00100100,
    B00100100,
    B00100100,
    B00100000,
    B00100000
};

const byte sequence59[] = {
// 4T Chase W/delay on 1st & Last  Ver.2 W/6 X delay, 
// W/2TC on step #1 & #4    step X7     P150
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010
};

const byte sequence60[] = {
// 5T Chase W/delay on 1st & Last Version 2 W/6 X delay  
// W/2TC on step 1 & 1TC on Step 5 Slow                        P182
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001000,
    B00001000,
    B00001000,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001000,
    B00001000,
    B00001000,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001000,
    B00001000,
    B00001000,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001
};

const byte sequence61[] = {
// 6T Chase W/delay on 1st & Last   Ver.2  W 6 X delay  
// W/2TC on step 1  Slow     P214
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100
};

const byte sequence62[] = {
// 7T Chase W/delay on 1st & Last   Ver.2  W/6 X delay     P246
// W/1TC on #1 Slow
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000000,
    B10000000,
    B10000000,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000000,
    B10000000,
    B10000000,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000000,
    B10000000,
    B10000000,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000000,
    B10000000,
    B10000000,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010
};

const byte sequence63[] = {
// 8T Chase W/delay on 1st & Last  Ver.2  6 X delay    P22
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001
};

const byte sequence64[] = {
////----------------------------For Falling Star with rings on the ground  32 steps---------T1-8--------------------------64 & 65
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000001,
    B00000001,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000

};

const byte sequence65[] = {
////----------------------------For Falling Star with rings on the ground  32 steps--------------T9-16-----------------------64 & 65

    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B10000000,
    B01000000,
    B10100000,
    B01010000,
    B10101000,
    B01010100,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B00101010,
    B00010101,
    B00001010,
    B00000101,
    B00000010,
    B00000001


};

const byte sequence66[] = {
// Two track, Back and Forth W/4X Delays Version 1      
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B01010000
};


const byte sequence67[] = {
// three track, Back and Forth Version 1
// Added T7 on except when T1 is on, T8 on except when T3 is on.    P104
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B01000011
};

const byte sequence68[] = {
// Four track, Back and Forth Version A         P136
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00100000,
    B00100000,
    B00100000,
    B01000000,
    B01000000,
    B01000000
};

const byte sequence69[] = {
// Five track, Back and Forth
// Added T7 on except when T1 is on, T8 on except when T5 is on.     P168
    B10000001,
    B10000001,
    B10000001,
    B01000011,
    B01000011,
    B01000011,
    B00100011,
    B00100011,
    B00100011,
    B00010011,
    B00010011,
    B00010011,
    B00001010,
    B00001010,
    B00001010,
    B00010011,
    B00010011,
    B00010011,
    B00100011,
    B00100011,
    B00100011,
    B01000011,
    B01000011,
    B01000011
};

const byte sequence70[] = {
// Six track, Back and Forth Version A
// Added T7 on except when T1 is on, T8 on except when T6 is on.     P200
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B00010011,
    B00010011,
    B00010011,
    B00010011,
    B00001011,
    B00001011,
    B00001011,
    B00001011,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00001011,
    B00001011,
    B00001011,
    B00001011,
    B00010011,
    B00010011,
    B00010011,
    B00010011,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B01000011,
    B01000011,
    B01000011,
    B01000011
};

const byte sequence71[] = {
// Seven track, Back and Forth Version A
// Added T8 on except when T7 is on.      P232
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000001,
    B01000001,
    B01000001,
    B01000001,
    B00100001,
    B00100001,
    B00100001,
    B00100001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00100001,
    B00100001,
    B00100001,
    B00100001,
    B01000001,
    B01000001,
    B01000001,
    B01000001
};

const byte sequence72[] = {
// Eight track, Back and Forth Version 1    No Delays   P8
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000001,
    B00000001,
    B00000001,
    B00000010,
    B00000010,
    B00000010,
    B00000100,
    B00000100,
    B00000100,
    B00001000,
    B00001000,
    B00001000,
    B00010000,
    B00010000,
    B00010000,
    B00100000,
    B00100000,
    B00100000,
    B01000000,
    B01000000,
    B01000000
};

const byte sequence73[] = {
// Two track, Back and Forth W/4X Delays Version 2
//                  Moved from slot 74
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000    
};

const byte sequence74[] = {
// three track, Back and Forth W/2X Delays Version 2
// Added T7 on except when T1 is on, T8 on except when T3 is on.   P106
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000011,
    B01000011,
    B01000011,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B01000011,
    B01000011,
    B01000011
};

const byte sequence75[] = {
// Four track, Back and Forth W/3X Delays Version 2
// Added T7 on except when T1 is on, T8 on except when T4 is on.    P138
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000011,
    B01000011,
    B01000011,
    B00100011,
    B00100011,
    B00100011,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00100011,
    B00100011,
    B00100011,
    B01000011,
    B01000011,
    B01000011
};

const byte sequence76[] = {
// Five track, Back and Forth   W/4X Delays   Ver.2
// Added T7 on except when T1 is on, T8 on except when T5 is on.     P170
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B00010011,
    B00010011,
    B00010011,
    B00010011,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00010011,
    B00010011,
    B00010011,
    B00010011,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B01000011,
    B01000011,
    B01000011,
    B01000011
};

const byte sequence77[] = {
// Six track, Back and Forth   W/ 4X Delays   Ver.2
// Added T7 on except when T1 is on, T8 on except when T6 is on.     P202
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B00010011,
    B00010011,
    B00010011,
    B00010011,
    B00001011,
    B00001011,
    B00001011,
    B00001011,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00001011,
    B00001011,
    B00001011,
    B00001011,
    B00010011,
    B00010011,
    B00010011,
    B00010011,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B01000011,
    B01000011,
    B01000011,
    B01000011
};

const byte sequence78[] = {
// Seven track, Back and Forth W/4X Delays Version 2
// Added T8 on except when T7 is on.    P234
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000001,
    B01000001,
    B01000001,
    B01000001,
    B00100001,
    B00100001,
    B00100001,
    B00100001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00100001,
    B00100001,
    B00100001,
    B00100001,
    B01000001,
    B01000001,
    B01000001,
    B01000001
};

const byte sequence79[] = {
// Eight track, Back and Forth W/4X Delays  Version 2   P10
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000010,
    B00000010,
    B00000010,
    B00000100,
    B00000100,
    B00000100,
    B00001000,
    B00001000,
    B00001000,
    B00010000,
    B00010000,
    B00010000,
    B00100000,
    B00100000,
    B00100000,
    B01000000,
    B01000000,
    B01000000
};

const byte sequence80[] = {
////----------------------------For Tidal Wave Arch -------Fort Hood-------------- 18 steps---------T1-6-------------------80 & 81
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B10110000,
    B10110000,
    B10101100,
    B10101100,
    B10101100,
    B10101000,
    B10101000,
    B10101000,
    B10101000,
    B10101000,
    B00101000,
    B00001000,
    B00000000,
    B00000000
};

const byte sequence81[] = {
////----------------------------For Tidal Wave Arch ----------------------  18 steps---11 Tracks--------T7-11----------------80 & 81
//  Tracks 9-16 for Tital Wave Arch   or Tracks 7-11 if you use 2-6TP 
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B10000000,
    B11100000,
    B11011000,
    B11011000,
    B11011000,
    B11011000,
    B11011000,
    B11011000,
    B11011000,
    B01011000
};

const byte sequence82[] = {
// 2T Build Up W/4X delay on 2 Ver1  W/2TC Slow, 
// Med & Fast  step X5    P92
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11010101,
    B11010110,
    B11010101,
    B11011010,
    B11011001,
    B11011010,
    B11100101,
    B11100110,
    B11100101,
    B11101010,
    B11101001,
    B11101010,
    B11010101,
    B11010110,
    B11010101,
    B00000000,
    B00000000
};

const byte sequence83[] = {
// 3T Build Up W/4X delay on 3  W/2TC Slow, 
// 2TC Fast, 1TC Slow  step X5     P124
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000, 
    B11110101,
    B11110100,
    B11110101,
    B11110010,
    B11110011,
    B11110010,
    B11101101,
    B11101100,
    B11101101,
    B11101010,
    B11101011,
    B11101010,
    B11110101,
    B11110100,
    B11110101,
    B11110010,
    B11110011,
    B11110010,
    B11101101,
    B11101100,
    B00000000,
    B00000000
};

const byte sequence84[] = {
// 4T Build Up W/4X delay on step 4      step X5   
//    W/2TC slow and a 2TC fast   P156
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110110,
    B11110101,
    B11110110,
    B11110101,
    B11110110,
    B11110101,
    B11111010,
    B11111001,
    B11111010,
    B11111001,
    B11111010,
    B11111001,
    B11110110,
    B11110101,
    B11110110,
    B11110101,
    B11110110,
    B11110101,
    B11111010,
    B11111001,
    B11111010,
    B00000000,
    B00000000
};

const byte sequence85[] = {
// 5T Build Up W/4X delay on 5  W/2TC and a Fast 1TC1  step X5     P188
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111011,
    B11111010,
    B11111011,
    B11111100,
    B11111101,
    B11111100,
    B11111011,
    B11111010,
    B11111011,
    B11111100,
    B11111101,
    B11111100,
    B11111011,
    B11111010,
    B11111011,
    B11111100,
    B11111101,
    B11111100,
    B11111011,
    B11111010,
    B00000000,
    B00000000
};

const byte sequence86[] = {
// 6T Build Up W/4X delay on 6   W/2TC on step 6    step X5     P220
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111101,
    B11111101,
    B11111101,
    B11111110,
    B11111110,
    B11111110,
    B11111101,
    B11111101,
    B11111101,
    B11111110,
    B11111110,
    B11111110,
    B11111101,
    B11111101,
    B11111101,
    B11111110,
    B11111110,
    B11111110,
    B11111101,
    B11111101,
    B00000000,
    B00000000
};

const byte sequence87[] = {
// 7T Build Up W/4X delay on 7  W/1TC on step 7  step X5    P252
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence88[] = {
// 8T Build Up W/ delay on up    4X Delay  step 5X    P28
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000
};

const byte sequence89[] = {
// 2T Build Up W/3X delay on 2  Ver1   W/2TC Slow, Fast & Slower      P94
    B10000000,
    B10000000,
    B10000000,
    B11101010,
    B11100110,
    B11011010,
    B11010101,
    B11101001,
    B11100101,
    B11011010,
    B11010110,
    B11101010,
    B00000000,
    B00000000
};

const byte sequence90[] = {
    B00000000
};


const byte sequence91[] = {
// 4T Build Up Version2 W/3X delay on step 4      P158
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B00000000,
    B00000000
};

const byte sequence92[] = {
//----------------------------For Fieldgoal Kick  14 steps-----For Fort Hood - 1 Leg Behind, 1 leg in front of Standing foot---------48&49
//                                3 Santas instead of 2
    B10100000,
    B10100000,
    B10100000,
    B01010000,
    B01001000,
    B01000100,
    B01000010,
    B01000001,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000
};  

const byte sequence93[] = {
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B10000100,
    B01000010,
    B00100010,
    B00010010,
    B00010010,
    B00010010
};

const byte sequence94[] = {
//----------------------------For Golfer  for Twin Lakes  16 steps----- 5 Clubs,  6 Balls and a Splash   ---------94 & 95
    B10000100,
    B10000100,
    B10000100,
    B01000100,
    B00100100,
    B01000100,
    B00010000,
    B00001010,
    B00001001,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00010000,
    B10000000
};

const byte sequence95[] = {
//---------------------------- Tracks 9-16  for Golfer--------------------------------------------------------------------   
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B10000000,
    B01000000,
    B00100000,
    B00100000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence96[] = {
    B00000000
};

const byte sequence97[] = {
    B00000000
};

const byte sequence98[] = {
// 2T Build Up & Down W/ delay on up  Ver1  3X Delay Step X5      P88
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B00000000,
    B00000000
};

const byte sequence99[] = {
// 3T Build Up & Down W/4X delay on up  V1  step X5. Added a fast 3TC and a Med 2TC 11-01
//           Shortened the delay o step 5    10-04       WAS 120  MOVED TO HERE   This is OK
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11110010,
    B11101010,
    B11100101,
    B11110001,
    B11101010,
    B11100110,
    B11110001,
    B11101001,
    B11100110,
    B11110010,
    B11101001,
    B11100101,
    B11100000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B00000000,
    B00000000

};

const byte sequence100[] = {
// 4T Build Up & Down W/4X Delay on up   step X5  Added 2TC on step 4  5X on and off   P152
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110001,
    B11110001,
    B11110010,
    B11110010,
    B11110001,
    B11110001,
    B11110010,
    B11110010,
    B11110001,
    B11110001,
    B11110010,
    B11110010,
    B11110001,
    B11110001,
    B11110010,
    B11110010,
    B11110001,
    B11110001,
    B11110010,
    B11110010,
    B11110000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B00000000,
    B00000000
};

const byte sequence101[] = {
// 5T Build Up & Down W/4X Delay on up    step X5  Added 2TC on step 5  5X on and off      P184
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111001,
    B11111001,
    B11111010,
    B11111010,
    B11111001,
    B11111001,
    B11111010,
    B11111010,
    B11111001,
    B11111001,
    B11111010,
    B11111010,
    B11111001,
    B11111001,
    B11111010,
    B11111010,
    B11111001,
    B11111001,
    B11111010,
    B11111010,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B00000000,
    B00000000
};

const byte sequence102[] = {
// 6T Build Up & Down W/4 Delay on up   Step X5  added a 2TC on 6th step 5X on and off    P216
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111101,
    B11111101,
    B11111110,
    B11111110,
    B11111101,
    B11111101,
    B11111110,
    B11111110,
    B11111101,
    B11111101,
    B11111110,
    B11111110,
    B11111101,
    B11111101,
    B11111110,
    B11111110,
    B11111101,
    B11111101,
    B11111110,
    B11111110,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B00000000,
    B00000000
};

const byte sequence103[] = {
    B00000000
};


const byte sequence104[] = {
// 8T Build Up & Down W/ delay on up     4X delay   Step X5    P24
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B00000000,
    B00000000
};

const byte sequence105[] = {
// 2T Build Up & Down  Cascade W/ delay on up   W/3X delay on up   Step X5
// had to remove. ran out of steps        P90
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B01100000,
    B01100000,
    B01100000,
    B01100000,
    B01100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000
    
};

const byte sequence106[] = {
// 3T Build Up & Down Ver 2 Cascade W/ delay on up   W/3X delay on up   Step X5
// Had to remove because we ran out of steps.
// Reinstated the 3T Build up & Dn Cascade on 10-04     P122
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B01100000,
    B01100000,
    B01100000,
    B00100000,
    B00100000,
    B00100000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence107[] = {
// 4T Build Up & Down  Cascade W/4X delay on up   Step X5    P154
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111100,
    B01111111,
    B01111111,
    B01111111,
    B01111111,
    B01111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B00011111,
    B00011111,
    B00011111,
    B00011111,
    B00011111,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};


const byte sequence108[] = {
// 5T Build Up & Down  Cascade W/ delay on up   W/4X delay on up   Step X5
// Had to remove because we ran out of steps.     P186
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B01111111,
    B01111111,
    B01111111,
    B01111111,
    B01111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B00011111,
    B00011111,
    B00011111,
    B00011111,
    B00011111,
    B00001111,
    B00001111,
    B00001111,
    B00001111,
    B00001111,
    B00000000,
    B00000000,
    B00000000
};


const byte sequence109[] = {
// 6T Build Up & Down v1
// Cascade W/ delay on up   W/4X delay on up   Step X5    P218
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111110,
    B11111111,
    B11111111,
    B01111111,
    B01111111,
    B01111111,
    B01111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B00011111,
    B00011111,
    B00011111,
    B00011111,
    B00001111,
    B00001111,
    B00001111,
    B00001111,
    B00000111,
    B00000111,
    B00000111,
    B00000111,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};


const byte sequence110[] = {
// 7T Build Up & Down Cascade W/ delay on up V2  W/4X delay on up   Step X5
// Had to remove because we are out of steps.     P250
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B01111111,
    B01111111,
    B01111111,
    B01111111,
    B01111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B00011111,
    B00011111,
    B00011111,
    B00011111,
    B00011111,
    B00001111,
    B00001111,
    B00001111,
    B00001111,
    B00001111,
    B00000111,
    B00000111,
    B00000111,
    B00000111,
    B00000111,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence111[] = {
// 8T Build Up & Down Cascade W/ delay on up     4X delay   Step X5     P26
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B01111111,
    B01111111,
    B01111111,
    B01111111,
    B01111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B00011111,
    B00011111,
    B00011111,
    B00011111,
    B00011111,
    B00001111,
    B00001111,
    B00001111,
    B00001111,
    B00001111,
    B00000111,
    B00000111,
    B00000111,
    B00000111,
    B00000111,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000000,
    B00000000,
    B00000000
};
 
const byte sequence112[] = {
    B00000000
};

const byte sequence113[] = {
    B00000000
};

const byte sequence114[] = {
// 2T Speller                P76
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B00000000,
    B11000000,
    B00000000,
    B11000000,
    B00000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence115[] = {
// 3T Speller                               P108
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B00000000,
    B11100000,
    B00000000,
    B11100000,
    B00000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence116[] = {
// 4T Speller                 P140
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B00000000,
    B11110000,
    B00000000,
    B11110000,
    B00000000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence117[] = {
// 5T Speller                  P172
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B00000000,
    B11111000,
    B00000000,
    B11111000,
    B00000000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence118[] = {
// 6T Speller                    P204
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B00000000,
    B11111100,
    B00000000,
    B11111100,
    B00000000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence119[] = {
// 7T Speller                   P236
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B00000000,
    B11111110,
    B00000000,
    B11111110,
    B00000000,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence120[] = {
// 8T Speller                  P12
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B11111111,
    B00000000,
    B11111111,
    B00000000,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence121[] = {
// 2T Speller     V2                
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B11111111,
    B00000000,
    B11111111,
    B00000000,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence122[] = {
// 3T Speller     V2                
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B11111111,
    B00000000,
    B11111111,
    B00000000,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence123[] = {
// 4T Speller     V2                
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B11111111,
    B00000000,
    B11111111,
    B00000000,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence124[] = {
// 5T Speller     V2                
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B11111111,
    B00000000,
    B11111111,
    B00000000,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence125[] = {
// 6T Speller     V2                
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B11111111,
    B00000000,
    B11111111,
    B00000000,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence126[] = {
// 7T Speller     V2                
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B11111111,
    B00000000,
    B11111111,
    B00000000,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence127[] = {
// 8T Speller     V2                
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B11111111,
    B00000000,
    B11111111,
    B00000000,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence128[] = {
    B00000000
};

const byte sequence129[] = {
    B00000000
}; 

const byte sequence130[] = {
// 2T Multi sequences  V2 In Sync
//    Chase Rt 16X   W/delay on T2                      
    B10100000,
    B01010000,
    B01010000,
    B10100000,
    B01010000,
    B01010000,
    B10100000,
    B01010000,
    B01010000,
    B10100000,
    B01010000,
    B01010000,
    B10100000,
    B01010000,
    B01010000,
    B10100000,
    B01010000,
    B01010000,
    B10100000,
    B01010000,
    B01010000,
    B10100000,
    B01010000,
    B01010000,
   
//    Chase Lt 16X  W/Delay on T1

    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
   
//    Alt Flash 10X
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
//    Build Up   X
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B00000000,
    B00000000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B00000000,
    B00000000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B00000000,
    B00000000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B00000000,
    B00000000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
//    All On 3X
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All Flash 3X
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
//    Back & Forth 8X  slow

    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B10100000,
    B10100000,
    B10100000,
    B01010000,
    B01010000,
    B01010000
};

const byte sequence131[] = {
// 3T Multi sequences  V1          P
//    Chase Rt 8X                        
    B10010000,
    B01001000,
    B00100100,
    B10010000,
    B01001000,
    B00100100,
    B10010000,
    B01001000,
    B00100100,
    B10010000,
    B01001000,
    B00100100,
    B10010000,
    B01001000,
    B00100100,
    B10010000,
    B01001000,
    B00100100,
    B10010000,
    B01001000,
    B00100100,
    B10010000,
    B01001000,
    B00100100,
   
//    Chase Lt 6X

    B01001000,
    B10010000,
    B00100100,
    B01001000,
    B10010000,
    B00100100,
    B01001000,
    B10010000,
    B00100100,
    B01001000,
    B10010000,
    B00100100,
    B01001000,
    B10010000,
    B00100100,
    B01001000,
    B10010000,
    B00100100,
    B01001000,
    B10010000,
    B00100100,
    B01001000,
    B10010000,
   
//    Alt Flash 10X
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
//    Build Up 3X
    B10010000,
    B10010000,
    B10010000,
    B11011000,
    B11011000,
    B11011000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B00000000,
    B00000000,
    B10010000,
    B10010000,
    B10010000,
    B11011000,
    B11011000,
    B11011000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B00000000,
    B00000000,
    B10010000,
    B10010000,
    B10010000,
    B11011000,
    B11011000,
    B11011000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B00000000,
    B00000000,
    B10010000,
    B10010000,
    B10010000,
    B11011000,
    B11011000,
    B11011000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B00000000,
    B00000000,
    B10010000,
    B10010000,
    B10010000,
    B11011000,
    B11011000,
    B11011000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
//    All On 3X
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All Flash 3X
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
//    Back & Forth 4X

    B00100100,
    B01001000,
    B10010000,
    B01001000,
    B00100100,
    B01001000,
    B10010000,
    B01001000,
    B00100100,
    B01001000,
    B10010000,
    B01001000,
    B00100100,
    B01001000,
    B10010000,
    B01001000,
    B00100100,
    B01001000,
    B10010000,
    B01001000,
    B00100100,
    B01001000,
    B10010000,
    B01001000,
    B00100100,
    B01001000,
    B10010000,
    B01001000,
    B00100100,
    B01001000,
    B10010000,
    B01001000,
    B00100100,
    B01001000,
    B10010000,
    B01001000,
    B00100100,
    B01001000,
    B10010000,
    B01001000,
    B00100100,
    B01001000
};

const byte sequence132[] = {
// 4T Multi sequences
//    Chase Rt 6X      P146
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
//    Chase Lt 6X
    B00100010,
    B01000100,
    B10001000,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
//    Alt Flash 10X
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
//    Build Up 3X
    B10001000,
    B10001000,
    B11001100,
    B11001100,
    B11101110,
    B11101110,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B10001000,
    B10001000,
    B11001100,
    B11001100,
    B11101110,
    B11101110,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B10001000,
    B10001000,
    B11001100,
    B11001100,
    B11101110,
    B11101110,
    B11111111,
    B11111111,
    B11111111,
//    All On 3X
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All Flash 3X
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
//    Back & Forth 3X
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B00100010,
    B01000100
};

const byte sequence133[] = {
// 5T Multi sequences
//    Chase Rt 5X              P178
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
//    Chase Lt 6X
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
//    Alt Flash 10X
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
//    Build Up 3X
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B00000000,
    B00000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B00000000,
    B00000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
//    All On 3X
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
//    All Flash 3X
    B00000000,
    B00000000,
    B11111000,
    B11111000,
    B00000000,
    B00000000,
    B11111000,
    B11111000,
    B00000000,
    B00000000,
    B11111000,
    B11111000,
//    Back & Forth 3X
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00010000,
    B00100000,
    B01000000
};

const byte sequence134[] = {
// 6T Multi sequences  V1
//    Chase Rt 5X   Updated 9-7-14      P210
    B10000011,
    B01000011,
    B00100011,
    B00010011,
    B00001011,
    B00000111,
    B10000011,
    B01000011,
    B00100011,
    B00010011,
    B00001011,
    B00000111,
    B10000011,
    B01000011,
    B00100011,
    B00010011,
    B00001011,
    B00000111,
    B10000011,
    B01000011,
    B00100011,
    B00010011,
    B00001011,
    B00000111,
    B10000011,
    B01000011,
    B00100011,
    B00010011,
    B00001011,
    B00000111,
//    Chase Lt 6X
    B00001011,
    B00010011,
    B00100011,
    B01000011,
    B10000011,
    B00000111,
    B00001011,
    B00010011,
    B00100011,
    B01000011,
    B10000011,
    B00000111,
    B00001011,
    B00010011,
    B00100011,
    B01000011,
    B10000011,
    B00000111,
    B00001011,
    B00010011,
    B00100011,
    B01000011,
    B10000011,
    B00000111,
    B00001011,
    B00010011,
    B00100011,
    B01000011,
    B10000011,
    B00000111,
    B00001011,
    B00010011,
    B00100011,
    B01000011,
    B10000011,
//    Alt Flash 19X
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
//    Build Up 4X
    B10000011,
    B10000011,
    B11000011,
    B11000011,
    B11100011,
    B11100011,
    B11110011,
    B11110011,
    B11111011,
    B11111011,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000011,
    B00000011,
    B10000011,
    B10000011,
    B11000011,
    B11000011,
    B11100011,
    B11100011,
    B11110011,
    B11110011,
    B11111011,
    B11111011,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000011,
    B00000011,
    B10000011,
    B10000011,
    B11000011,
    B11000011,
    B11100011,
    B11100011,
    B11110011,
    B11110011,
    B11111011,
    B11111011,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000011,
    B00000011,
    B10000011,
    B10000011,
    B11000011,
    B11000011,
    B11100011,
    B11100011,
    B11110011,
    B11110011,
    B11111011,
    B11111011,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All On 4X
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All Flash 4X
    B00000011,
    B00000011,
    B11111111,
    B11111111,
    B00000011,
    B00000011,
    B11111111,
    B11111111,
    B00000011,
    B00000011,
    B11111111,
    B11111111,
    B00000011,
    B00000011,
    B11111111,
    B11111111,
//    Back & Forth 4X
    B10000011,
    B01000011,
    B00100011,
    B00010011,
    B00001011,
    B00000111,
    B00001011,
    B00010011,
    B00100011,
    B01000011,
    B10000011,
    B01000011,
    B00100011,
    B00010011,
    B00001011,
    B00000111,
    B00001011,
    B00010011,
    B00100011,
    B01000011,
    B10000011,
    B01000011,
    B00100011,
    B00010011,
    B00001011,
    B00000111,
    B00001011,
    B00010011,
    B00100011,
    B01000011,
    B10000011,
    B01000011,
    B00100011,
    B00010011,
    B00001011,
    B00000111,
    B00001011,
    B00010011,
    B00100011,
    B01000011
};

const byte sequence135[] = {
// 7T Multi sequences    P242
//    Chase Rt 5X
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
//    Chase Lt 6X
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
//    Alt Flash 10X
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
//    Build Up 3X
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B00000000,
    B00000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B00000000,
    B00000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
//    All On 3X
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
//    All Flash 3X
    B00000000,
    B00000000,
    B11111110,
    B11111110,
    B00000000,
    B00000000,
    B11111110,
    B11111110,
    B00000000,
    B00000000,
    B11111110,
    B11111110,
//    Back & Forth 4X
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000
};

const byte sequence136[] = {
// 8T Multi sequences
//    Chase Rt 4X                        P18
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001,
//    Chase Lt 6X
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
//    Alt Flash 10X
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
//    Build Up 3X
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All On 3X
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All Flash 3X
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
//    Back & Forth 4X
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000
};

const byte sequence137[] = {
// 2T Multi sequences  V2 In Sync
//    Chase Rt 16X   W/delay on T2                      
    B10100000,
    B01010000,
    B01010000,
    B10100000,
    B01010000,
    B01010000,
    B10100000,
    B01010000,
    B01010000,
    B10100000,
    B01010000,
    B01010000,
    B10100000,
    B01010000,
    B01010000,
    B10100000,
    B01010000,
    B01010000,
    B10100000,
    B01010000,
    B01010000,
    B10100000,
    B01010000,
    B01010000,
   
//    Chase Lt 16X  W/Delay on T1

    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
   
//    Alt Flash 10X
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
//    Build Up   X
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B00000000,
    B00000000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B00000000,
    B00000000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B00000000,
    B00000000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B00000000,
    B00000000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
//    All On 3X
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All Flash 3X
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
//    Back & Forth 8X  slow

    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B10100000,
    B10100000,
    B10100000,
    B01010000,
    B01010000,
    B01010000

};

const byte sequence138[] = {
// 3T Multi sequences  V2 In Sync
//    Chase Rt 8X                        
    B10010000,
    B01001000,
    B00100100,
    B10010000,
    B01001000,
    B00100100,
    B10010000,
    B01001000,
    B00100100,
    B10010000,
    B01001000,
    B00100100,
    B10010000,
    B01001000,
    B00100100,
    B10010000,
    B01001000,
    B00100100,
    B10010000,
    B01001000,
    B00100100,
    B10010000,
    B01001000,
    B00100100,
   
//    Chase Lt 6X

    B01001000,
    B10010000,
    B00100100,
    B01001000,
    B10010000,
    B00100100,
    B01001000,
    B10010000,
    B00100100,
    B01001000,
    B10010000,
    B00100100,
    B01001000,
    B10010000,
    B00100100,
    B01001000,
    B10010000,
    B00100100,
    B01001000,
    B10010000,
    B00100100,
    B01001000,
    B10010000,
   
//    Alt Flash 10X
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
//    Build Up 3X
    B10010000,
    B10010000,
    B10010000,
    B11011000,
    B11011000,
    B11011000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B00000000,
    B00000000,
    B10010000,
    B10010000,
    B10010000,
    B11011000,
    B11011000,
    B11011000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B00000000,
    B00000000,
    B10010000,
    B10010000,
    B10010000,
    B11011000,
    B11011000,
    B11011000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B00000000,
    B00000000,
    B10010000,
    B10010000,
    B10010000,
    B11011000,
    B11011000,
    B11011000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B00000000,
    B00000000,
    B10010000,
    B10010000,
    B10010000,
    B11011000,
    B11011000,
    B11011000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
//    All On 3X
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All Flash 3X
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
//    Back & Forth 4X

    B00100100,
    B01001000,
    B10010000,
    B01001000,
    B00100100,
    B01001000,
    B10010000,
    B01001000,
    B00100100,
    B01001000,
    B10010000,
    B01001000,
    B00100100,
    B01001000,
    B10010000,
    B01001000,
    B00100100,
    B01001000,
    B10010000,
    B01001000,
    B00100100,
    B01001000,
    B10010000,
    B01001000,
    B00100100,
    B01001000,
    B10010000,
    B01001000,
    B00100100,
    B01001000,
    B10010000,
    B01001000,
    B00100100,
    B01001000,
    B10010000,
    B01001000,
    B00100100,
    B01001000,
    B10010000,
    B01001000,
    B00100100,
    B01001000

};

const byte sequence139[] = {
// 4T Multi sequences  V2 In Sync
//    Chase Rt 6X                        
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
   
//    Chase Lt 6X
    B00100010,
    B01000100,
    B10001000,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
   
//    Alt Flash 10X
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
//    Build Up 3X
    B10001000,
    B10001000,
    B11001100,
    B11001100,
    B11101110,
    B11101110,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B10001000,
    B10001000,
    B11001100,
    B11001100,
    B11101110,
    B11101110,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B10001000,
    B10001000,
    B11001100,
    B11001100,
    B11101110,
    B11101110,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B10001000,
    B10001000,
    B11001100,
    B11101110,
    B11101110,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B10001000,
    B10001000,
    B11001100,
    B11001100,
    B11101110,
    B11101110,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B10001000,
    B10001000,
    B11001100,
    B11001100,
    B11101110,
    B11101110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All On 3X
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All Flash 3X
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
//    Back & Forth 4X
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B00100010,
    B01000100
};

const byte sequence140[] = {
// 1T Multi sequences  V2 In Sync
//    Chase Rt 16X   W/delay on T2                      
    B10100000,
    B01010000,
    B10100000,
    B01000000,
    B10100000,
    B01010000,
    B10100000,
    B01010000,
    B10100000,
    B01000000,
    B10100000,
    B01010000,
    B10100000,
    B01010000,
    B10100000,
    B01000000,
    B10100000,
    B01010000,
    B10100000,
    B01010000,
    B10100000,
    B01000000,
    B01010000,
    B10100000,
   
//    Chase Lt 16X  W/Delay on T1

    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
   
//    Alt Flash 10X
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
//    Build Up   X
    B10100000,
    B01010000,
    B10100000,
    B01010000,
    B10100000,
    B01100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B00000000,
    B00000000,
    B10100000,
    B01010000,
    B10100000,
    B01010000,
    B10100000,
    B01010000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B00000000,
    B00000000,
    B10100000,
    B01010000,
    B10100000,
    B01010000,
    B10100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B00000000,
    B00000000,
    B01010000,
    B10100000,
    B01010000,
    B10100000,
    B01010000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B00000000,
    B00000000,
    B01010000,
    B10100000,
    B01010000,
    B10100000,
    B01010000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
//    All On 3X
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All Flash 3X
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
//    Back & Forth 8X  slow

    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B10100000,
    B10100000,
    B10100000,
    B01010000,
    B01010000,
    B01010000
};

const byte sequence141[] = {
// 6T Multi sequences  V2 In Sync
//    Chase Rt 4X                        
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
   
//    Chase Lt 6X

    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
   
//    Alt Flash 10X
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
//    Build Up 3X
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All On 3X
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All Flash 3X
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
//    Back & Forth 4X

    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000

};

const byte sequence142[] = {
    B00000000
};

const byte sequence143[] = {
// 8T Multi sequences  V2 In Sync
//    Chase Rt 3X                        
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001,
   
//    Chase Lt 6X
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
   
//    Alt Flash 10X
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
//    Build Up 3X
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All On 3X
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All Flash 3X
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
//    Back & Forth 4X
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000
  
};

const byte sequence144[] = {
    B00000000
};

const byte sequence145[] = {
//*  Save For 8T 1 col Multi Seq
    B00000000
};

const byte sequence146[] = {
// 2col  1T Per Color  Multi sequences  
//    Chase Rt 16X   W/delay on T2                      
    B10100000,
    B01010000,
    B01010000,
    B10100000,
    B01010000,
    B01010000,
    B10100000,
    B01010000,
    B01010000,
    B10100000,
    B01010000,
    B01010000,
    B10100000,
    B01010000,
    B01010000,
    B10100000,
    B01010000,
    B01010000,
    B10100000,
    B01010000,
    B01010000,
    B10100000,
    B01010000,
    B01010000,
//    Chase Lt 16X  W/Delay on T1
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
    B01010000,
    B10100000,
    B10100000,
   
//    Alt Flash 10X
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
//    Build Up   X
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B00000000,
    B00000000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B00000000,
    B00000000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B00000000,
    B00000000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B00000000,
    B00000000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
//    All On 3X
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All Flash 3X
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
//    Back & Forth 8X  slow

    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B10100000,
    B10100000,
    B10100000,
    B01010000,
    B01010000,
    B01010000

};    // delete from 


const byte sequence147[] = {
    B00000000
};

const byte sequence148[] = {
    B00000000
};

const byte sequence149[] = {
    B00000000
};

const byte sequence150[] = {
// 6T 3T Per Color  Multi sequences  V1
//    Chase Rt 5X  
    B10000011,
    B00100011,
    B00001011,
    B10000011,
    B00100011,
    B00001011,
    B10000011,
    B00100011,
    B00001011,
    B10000011,
    B00100011,
    B00001011,
    B10000011,
    B00100011,
    B00001011,
    B10000011,
    B00100011,
    B00001011,
    B10000011,
    B00100011,
    B00001011,
    B10000011,
    B00100011,
    B00001011,
    B10000011,
    B00100011,
    B00001011,
    B10000011,
    B00100011,
    B00001011,
//    Chase Lt 6X
    B00000111,
    B00010011,
    B01000011,
    B00000111,
    B00010011,
    B01000011,
    B00000111,
    B00010011,
    B01000011,
    B00000111,
    B00010011,
    B01000011,
    B00000111,
    B00010011,
    B01000011,
    B00000111,
    B00010011,
    B01000011,
    B00000111,
    B00010011,
    B01000011,
    B00000111,
    B00010011,
    B01000011,
    B00000111,
    B00010011,
    B01000011,
    B00000111,
    B00010011,
    B01000011,
    B00000111,
    B00010011,
    B01000011,
    B00000111,
    B00010011,
//    Alt Flash 19X
    B01000111,
    B00010011,
    B01000111,
    B00010011,
    B01000111,
    B00010011,
    B01000111,
    B00010011,
    B01000111,
    B00010011,
    B01000111,
    B00010011,
    B01000111,
    B00010011,
    B01000111,
    B00010011,
    B01000111,
    B00010011,
    B01000111,
    B00010011,    
    B01000111,
    B00010011,
    B01000111,
    B00010011,

    B10001011,
    B00100011,
    B10001011,
    B00100011,
    B10001011,
    B00100011,
    B10001011,
    B00100011,
    B10001011,
    B00100011,
    B10001011,
    B00100011,
    B10001011,
    B00100011,
    B10001011,
    B00100011,
    B10001011,
    B00100011,
    B10001011,
    B00100011,
    B10001011,
    B00100011,
    B10001011,
    B00100011,

//    Build Up 4X
    B10000011,
    B10000011,
    B10100011,
    B10100011,
    B10101011,
    B10101011,
    B10101011,
    B10101011,
    B00000011,
    B00000011,
    B10000011,
    B10000011,
    B10100011,
    B10100011,
    B10101011,
    B10101011,
    B10101011,
    B10101011,
    B00000011,
    B00000011,

    B01000011,
    B01000011,
    B01010011,
    B01010011,
    B01010111,
    B01010111,
    B01010111,
    B01010111,
    B00000011,
    B00000011,
    B01000011,
    B01000011,
    B01010011,
    B01010011,
    B01010111,
    B01010111,
    B01010111,
    B01010111,
    B00000011,
    B00000011,

    B10000011,
    B10000011,
    B10100011,
    B10100011,
    B10101011,
    B10101011,
    B11101011,
    B11101011,
    B11111011,
    B11111011,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000011,
    B00000011,

    B10000011,
    B10000011,
    B10100011,
    B10100011,
    B10101011,
    B10101011,
    B11101011,
    B11101011,
    B11111011,
    B11111011,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000011,
    B00000011,

    B10000011,
    B10000011,
    B11000011,
    B11000011,
    B11100011,
    B11100011,
    B11110011,
    B11110011,
    B11111011,
    B11111011,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000011,
    B00000011,
    B10000011,
    B10000011,
    B11000011,
    B11000011,
    B11100011,
    B11100011,
    B11110011,
    B11110011,
    B11111011,
    B11111011,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All On 4X
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All Flash 4X
    B00000011,
    B00000011,
    B11111111,
    B11111111,
    B00000011,
    B00000011,
    B11111111,
    B11111111,
    B00000011,
    B00000011,
    B11111111,
    B11111111,
    B00000011,
    B00000011,
    B11111111,
    B11111111,
    B11111111,
//    Back & Forth 4X
    B10000011,
    B01000011,
    B00100011,
    B00010011,
    B00001011,
    B00000111,
    B00001011,
    B00010011,
    B00100011,
    B01000011,
    B10000011,
    B01000011,
    B00100011,
    B00010011,
    B00001011,
    B00000111,
    B00001011,
    B00010011,
    B00100011,
    B01000011,
    B10000011,
    B01000011,
    B00100011,
    B00010011,
    B00001011,
    B00000111,
    B00001011,
    B00010011,
    B00100011,
    B01000011,
    B10000011,
    B01000011,
    B00100011,
    B00010011,
    B00001011,
    B00000111,
    B00001011,
    B00010011,
    B00100011,
    B01000011
};    // delete from 

const byte sequence151[] = {
    B00000000
};

const byte sequence152[] = {
// 8T  2 Color  4T Per Color  Multi sequences 
//    Chase Rt 6X      P146
    B10000111,
    B01001011,
    B00101101,
    B00011110,
    B10000111,
    B01001011,
    B00101101,
    B00011110,
    B10000111,
    B01001011,
    B00101101,
    B00011110,
    B10000111,
    B01001011,
    B00101101,
    B00011110,
    B10000111,
    B01001011,
    B00101101,
    B00011110,
    B10000111,
    B01001011,
    B00101101,
    B00011110,
//    Chase Lt 6X
    B00111100,
    B01111000,
    B11100001,
    B11010010,
    B10110100,
    B01111000,
    B11100001,
    B11010010,
    B10110100,
    B01111000,
    B11100001,
    B11010010,
    B10110100,
    B01111000,
    B11100001,
    B11010010,
    B10110100,
    B01111000,
    B11100001,
    B11010010,
    B10110100,
    B01111000,
    B11100001,
    B11010010,
    B10110100,
    B01111000,
//    Alt Flash 10X
    B00000101,
    B00001010,
    B00000101,
    B00001010,
    B00000101,
    B00001010,
    B00000101,
    B00001010,
    B00000101,
    B00001010,
    B00000101,
    B00001010,
    B00000101,
    B00001010,
    B00000101,
    B00001010,
    B00000101,
    B00001010,
    B00010100,
    B00101000,
    B01010000,
    B10100000,
    B01010000,
    B10100000,
    B01010000,
    B10100000,
    B01010000,
    B10100000,
    B01010000,
    B10100000,
    B01010000,
    B10100000,
    B01010000,
    B10100000,
    B01010000,
    B10100000,
    B01010000,
    B10100000,
    B01010000,
    B10100000,
    B01010000,
//    Build Up 3X
    B11110000,
    B11110000,
    B01111000,
    B01111000,
    B00111100,
    B00111100,
    B00011110,
    B00011110,
    B00001111,
    B00001111,
    B10000111,
    B10000111,
    B11000011,
    B11000011,
    B11100001,
    B11100001,
    B11110000,
    B11110000,
    B01111000,
    B01111000,
    B00111100,
    B00111100,
    B00011110,
    B00011110,
    B00001111,
    B00001111,
    B10000111,
    B10000111,
    B11000011,
    B11000011,
    B11100001,
    B11100001,
    B11110000,
    B11110000,
    B01111000,
    B01111000,
    B00111100,
    B00111100,
    B00011110,
    B00011110,
    B00001111,
    B00001111,
    B10000111,
    B10000111,
    B11000011,
    B11000011,
    B11100001,
    B11100001,
    B11110000,
    B11110000,
    B01111000,
    B01111000,
    B00111100,
    B00111100,
    B00011110,
    B00011110,
    B00001111,
    B00001111,
    B10000111,
    B10000111,
    B11000011,
    B11000011,
    B11100001,
    B11100001,
    B11110000,
    B11110000,
    B01111000,
    B01111000,
    B00111100,
    B00111100,
    B00011110,
    B00011110,
    B00001111,
    B00001111,
    B10000111,
    B10000111,
    B11000011,
    B11000011,
    B11100001,
    B11100001,

//    All On 3X
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B00001111,
    B00001111,
    B00001111,
    B00001111,
    B00001111,
    B00001111,
    B00001111,
//    All Flash 3X
    B00000000,
    B00000000,
    B11110000,
    B11110000,
    B00000000,
    B00000000,
    B00001111,
    B00001111,
    B00000000,
    B00000000,
    B11110000,
    B11110000,
    B00000000,
    B00000000,
    B00001111,
    B00001111,
//    Back & Forth 3X
    B10000111,
    B01001011,
    B00101101,
    B00011110,
    B00101101,
    B01001011,
    B10000111,
    B01001011,
    B00101101,
    B00011110,
    B00101101,
    B01001011,
    B10000111,
    B01001011,
    B00101101,
    B00011110,
    B00100010,
    B01000100,
    B10000111,
    B01001011,
    B00101101,
    B00011110,
    B00101101,
    B01001011,
    B10000111,
    B01001011,
    B00101101,
    B00011110,
    B00100010,
    B01000100,
    B10001000
};


const byte sequence153[] = {
    B00000000
};

const byte sequence154[] = {
    B00000000
};

const byte sequence155[] = {
    B00000000
};

const byte sequence156[] = {
    B00000000
};

const byte sequence157[] = {
    B00000000
};

const byte sequence158[] = {
    B00000000
};

const byte sequence159[] = {
    B00000000
};

const byte sequence160[] = {
    B00000000
};

const byte sequence161[] = {
    B00000000
};
 
const byte sequence162[] = {
//Other Special seq. #7  Cannonball W 5 Balls
//      2 arms, smoke, 4 balls & an explosion.
//   4X delay on step1, 2X step2, 2X delay on last step.     P225
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01100000,
    B01100000,
    B01100000,
    B10110000,
    B10110000,
    B10110000,
    B10001000,
    B10001000,
    B10001000,
    B10000100,
    B10000100,
    B10000100,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001
};

const byte sequence163[] = {
// Version 2 for the Special Cannonball sequence.
// 3 arm positions, and up to 5 balls. 
// 1Wdelay,2Wdelay,3Wdelay,2&4,1&5,1&6,1&7,1&8
// eight track chase   Version 1  Fast  3X     P62
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B01010000,
    B01010000,
    B01010000,
    B10001000,
    B10001000,
    B10001000,
    B10000100,
    B10000100,
    B10000100,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001
};


const byte sequence164[] = {
//Other Special seq. #5 Tennis W/2 Rackets
//      2 arms and 4 Loose balls.     P161
    B10100001,
    B10100001,
    B10100001,
    B10100001,
    B01000001,
    B01000001,
    B01000001,
    B01000001,
    B10100001,
    B10100001,
    B10100001,
    B10100001,
    B10010001,
    B10010001,
    B10010001,
    B10010001,
    B10001001,
    B10001001,
    B10001001,
    B10001001,
    B10000101,
    B10000101,
    B10000101,
    B10000101,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000101,
    B10000101,
    B10000101,
    B10000101,
    B10001001,
    B10001001,
    B10001001,
    B10001001,
    B10010001,
    B10010001,
    B10010001,
    B10010001
};

const byte sequence165[] = {
//Other Special seq. #6 Tennis W/3 Rackets
//      3 arms and 4 Loose balls.           P193
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B01000010,
    B01000010,
    B01000010,
    B01000010,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B00010011,
    B00010011,
    B00010011,
    B00010011,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00010011,
    B00010011,
    B00010011,
    B00010011,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B01000010,
    B01000010,
    B01000010,
    B01000010
};


const byte sequence166[] = {

//Other seq, #2  Golfer1 W/3 clubs and 6 balls
// 7-27-01 Special sequence #2. W 2 practice swings.     P65
    B01000001,
    B01000001,
    B01000001,
    B01000001,
    B01000001,
    B01000001,
    B10000001,
    B10000001,
    B01000001,
    B01000001,
    B10000001,
    B10000001,
    B01000001,
    B01000001,
    B01000001,
    B01000001,
    B01000001,
    B01000001,
    B01000001,
    B01000001,
    B10000001,
    B10000001,
    B01000001,
    B01000001,
    B00100000,
    B00100000,
    B01010000,
    B01010000,
    B01001000,
    B01001000,
    B01000100,
    B01000100,
    B01000010,
    B01000010,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000
};

 
const byte sequence167[] = {
//Other seq,   Golfer2 W/3 Back clubs and 5 balls
// 11-10-01 Special sequence. W 2 practice swings.  use 11000011      P195
    B00110000,
    B00110000,
    B00110000,
    B01010000,
    B01010000,
    B00110000,
    B00110000,
    B01010000,
    B01010000,
    B00110000,
    B00110000,
    B00110000,
    B01010000,
    B01010000,
    B10010000,
    B10010000,
    B01010000,
    B01010000,
    B00110000,
    B00101000,
    B00101000,
    B00100100,
    B00100100,
    B00100010,
    B00100010,
    B00100010,
    B00100001,
    B00100001,
    B00100001,
    B00100001,
    B00100000,
    B00100000,
    B00100000,
    B00100000
};



const byte sequence168[] = {
//Other Special seq. #4 Snowball Fight
//      2 arms and 2 loose balls.
//      Arms dissapear after throws ball.    P129
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001
};

const byte sequence169[] = {
    B00100001
};
 
const byte sequence170[] = {
// 1st Other Pattern. Baseball w/6 balls and
// 2-2pos. arms, lights up ball 4,3&2 after hit.    P33
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000011,
    B01000011,
    B01000011,
    B00100011,
    B00100011,
    B00100011,
    B00010011,
    B00010011,
    B00010011,
    B00001010,
    B00001010,
    B00001010,
    B00010011,
    B00010011,
    B00010011,
    B00100011,
    B00100011,
    B00100011,
    B01000011,
    B01000011,
    B01000011,
    B00000111,
    B00000111,
    B00000111,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011
};

const byte sequence171[] = {
    B00000000
};

const byte sequence172[] = {
    B00000000
};

const byte sequence173[] = {
//Other Special seq. #13  6 Track Tennis W/2 Rackets each,
//               2 arms and 2 Loose balls.           P173
    B10100100,
    B10100100,
    B10100100,
    B10100100,
    B01000100,
    B01000100,
    B01000100,
    B01000100,
    B10100100,
    B10100100,
    B10100100,
    B10100100,
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10010100,
    B10010100,
    B10010100,
    B10010100,
};

const byte sequence174[] = {
//Other Special seq. #14   6 Track  Cannonball W 3 Free Balls
//      2 arms, 3 balls & an explosion.
//   4X delay on step1, 2X delay on step2, and 3X Flash on last step.     P174
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01100000,
    B01100000,
    B01100000,
    B10010000,
    B10010000,
    B10010000,
    B10001000,
    B10001000,
    B10001000,
    B10000100,
    B10000100,
    B10000000,
    B10000100,
    B10000100,
    B10000000,
    B10000100,
    B10000100,
    B10000000,
    B10000100,
    B10000100,
    B10000100,
    B10000100,

};

const byte sequence175[] = {
    B00000000
};

const byte sequence176[] = {  
    B00000000
};

const byte sequence177[] = {
    B00000000
};

const byte sequence178[] = {
    B00000000
};

const byte sequence179[] = {
//Other Special Seq. #3  Basketball,Throwing a Ball  for 3T
//      Track 3 comes on W/step 2 and stays on.
//   4X delay on step #1, 3X delay on last step #2.     P35
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01100000,
    B01100000,
    B01100000,
    B01100000,
    B01100000,
    B01100000,
    B01100000,
    B01100000,
    B01100000
};

const byte sequence180[] = {
//Other Special Seq. #3  Basketball,Throwing a Ball  for 4T
//      Track 4 comes on W/step 2 and stays on.  3 Balls
//   4X delay on step #1, 3X delay on last step #3.     P36
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01010000,
    B01010000,
    B01010000,
    B00110000,
    B00110000,
    B00110000,
    B00110000,
    B00110000,
    B00110000,
    B00110000,
    B00110000,
    B00110000
};

const byte sequence181[] = {
//Other Special Seq. #3  Basketball,Throwing a Ball  for 5T
//      Track 5 comes on W/step 2 and stays on.
//   4X delay on step #1, 3X delay on last step #4.    P37
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01001000,
    B01001000,
    B01001000,
    B00101000,
    B00101000,
    B00101000,
    B00011000,
    B00011000,
    B00011000,
    B00011000,
    B00011000,
    B00011000,
    B00011000,
    B00011000,
    B00011000
};

const byte sequence182[] = {
//Other Special Seq. #3  Basketball,Throwing a Ball  for 6T
//      Track 6 comes on W/step 2 and stays on.
//   4X delay on step #1, 3X delay on last step #5.     P38
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000100,
    B01000100,
    B01000100,
    B00100100,
    B00100100,
    B00100100,
    B00010100,
    B00010100,
    B00010100,
    B00001100,
    B00001100,
    B00001100,
    B00001100,
    B00001100,
    B00001100,
    B00001100,
    B00001100,
    B00001100
};

const byte sequence183[] = {
//Other Special Seq. #3  Basketball,Throwing a Ball  for 7T
//      Track 7 comes on W/step 2 and stays on.
//   4X delay on step #1, 3X delay on last step #6.      P39
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000010,
    B01000010,
    B01000010,
    B00100010,
    B00100010,
    B00100010,
    B00010010,
    B00010010,
    B00010010,
    B00001010,
    B00001010,
    B00001010,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110
};

const byte sequence184[] = {
    B00000000
};

const byte sequence185[] = {
//Other Special seq. #3  Basketball,Throwing a Ball
//      Track 8 comes on W/step 2 and stays on.
//*   4X delay on step #1, 3X delay on last step #7.      P97
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000001,
    B01000001,
    B01000001,
    B00100001,
    B00100001,
    B00100001,
    B00010001,
    B00010001,
    B00010001,
    B00001001,
    B00001001,
    B00001001,
    B00000101,
    B00000101,
    B00000101,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011
};


const byte sequence186[] = {
    B00000000
};

const byte sequence187[] = {
    B01110111
};

const byte sequence188[] = {
//Chase Ver3  Throwing seq. No delay    5T
//      Track 8 comes on W/step 2 and stays on.
    B10000000,
    B10000000,
    B10000000,
    B01000101,
    B01000101,
    B01000101,
    B00100101,
    B00100101,
    B00100101,
    B00010101,
    B00010101,
    B00010101,
    B00001101,
    B00001101,
    B00001101
};


const byte sequence189[] = {
   B00000000
};

const byte sequence190[] = {
//  save Slot for 2T speller V2
    B00000000
};

const byte sequence191[] = {
    B00000000
};

const byte sequence192[] = {
    B00000000
};

const byte sequence193[] = {
    B00000000
};

const byte sequence194[] = {
    B00000000
};

const byte sequence195[] = {
//Other Special Seq. #8  Bowler, reverse of Throwing a Ball    For  3T
//      Track 3 stays on W/step 1 through 2 and then goes off for step 2.
//   4X delay on step #1, 4X delay on last step #4.
//   as a bowler the arm would dissapears after step 2.     P51
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000
};

const byte sequence196[] = {
//Other Special Seq. #8  Bowler, reverse of Throwing a Ball    For  4T
//      Track 4 stays on W/step 1 through 2 and then goes off for step 3.
//   4X delay on step #1, 4X delay on last step #4.
//   as a bowler the arm would dissapears after step 2.     P52
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B01010000,
    B01010000,
    B01010000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000
};

const byte sequence197[] = {
//Other Special Seq. #8  Bowler, reverse of Throwing a Ball    For  5T
//      Track 5 stays on W/step 1 through 3 and then goes off for step 4.
//   4X delay on step #1, 4X delay on last step #5.
//   as a bowler the arm would dissapears after step 2.      P53
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B01001000,
    B01001000,
    B01001000,
    B00101000,
    B00101000,
    B00101000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000
};

const byte sequence198[] = {
//Other Special Seq. #8  Bowler, reverse of Throwing a Ball   For  6T
//      Track 6 stays on W/step 1 through 4 and then goes off for step 5.
//   4X delay on step #1, 4X delay on last step #6.
//   as a bowler the arm would dissapears after step 2.    P54
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B01000100,
    B01000100,
    B01000100,
    B00100100,
    B00100100,
    B00100100,
    B00010100,
    B00010100,
    B00010100,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000
};

const byte sequence199[] = {
//Other Special Seq. #8  Bowler, reverse of Throwing a BallFor  7T
//      Track 7 stays on W/step 1 through 5 and then goes off for step 6.
//   4X delay on step #1, 4X delay on last step #7.
//   as a bowler the arm would dissapears after step 2.    P55
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B01000010,
    B01000010,
    B01000010,
    B00100010,
    B00100010,
    B00100010,
    B00010010,
    B00010010,
    B00010010,
    B00001010,
    B00001010,
    B00001010,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100
};

const byte sequence200[] = {
//Other Special seq. #8  Bowler, reverse of Throwing a Ball
//      Track 8 stays on W/step 1 through 6 and then goes off for step 7.
//   4X delay on step #1, 4X delay on last step #7.
//   as a bowler the arm would dissapears after step 2.      P1
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000001,
    B01000001,
    B01000001,
    B00100001,
    B00100001,
    B00100001,
    B00010001,
    B00010001,
    B00010001,
    B00001001,
    B00001001,
    B00001001,
    B00000101,
    B00000101,
    B00000101,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010
};

const byte sequence201[] = {
    B01000000
};

const byte sequence202[] = {
//Other Special Seq. Like a Bowler, but it Hits the pins at step #5
//      Track 8 stays on W/step 1 through 4 and then goes off for step 5-7.
//   4X delay on step #1, 4X delay on last step #7.  V2
//   as a bowler the arm would dissapears after step 2.  added 10-24-13    P50
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000001,
    B01000001,
    B01000001,
    B00100001,
    B00100001,
    B00100001,
    B00010001,
    B00010001,
    B00010001,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010
};

const byte sequence203[] = {
// 2TC with T3 on 50% of the time
    B10000000,
    B01000000,
    B10100000,
    B01100000
};

const byte sequence204[] = {
// 2TC with T3 on 40% of the time 10 steps
    B10010000,
    B01010000,
    B10010000,
    B01110000,
    B10110000,
    B01000000,
    B10000000,
    B01000000,
    B10100000,
    B01100000
};

const byte sequence205[] = {
// 2TC with T3 on 33% of the time 6 steps
    B10010000,
    B01010000,
    B10110000,
    B01000000,
    B10000000,
    B01100000

};

const byte sequence206[] = {
//3TC  V3  W/ T4 on 50% of the time

    B10010000,
    B01010000,
    B00110000,
    B10000000,
    B01000000,
    B00100000
};

const byte sequence207[] = {
//3TC  V3  W/ T4 on 66% of the time
    B10010000,
    B01010000,
    B00100000
};

const byte sequence208[] = {
    B00000000
};

const byte sequence209[] = {
    B00000000
};

const byte sequence210[] = {
    B00000000
};

const byte sequence211[] = {
    B00000000
};

const byte sequence212[] = {
    B00000000
};

const byte sequence213[] = {
//* 6T Chase W/delay on 1st & Last  Ver.3  W/6 X delay  W/2TC on #6 Slow
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000101,
    B00000101,
    B00000101,
    B00000101
};

const byte sequence214[] = {
    B00000000
};

const byte sequence215[] = {
// 6T Chase W/delay on 1st & Last Ver.4 W/6 X delay 
//* W/2TC on step 1  Only 1 change
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100
};

const byte sequence216[] = {
    B00000000
};

const byte sequence217[] = {
//*
    B00000000
};

const byte sequence218[] = {
    B00000000
};

const byte sequence219[] = {
//*
    B00000000
};

const byte sequence220[] = {
    B00000000
};

const byte sequence221[] = {
//*
    B00000000
};

const byte sequence222[] = {
    B00000000
};

const byte sequence223[] = {
//*
    B00000000
};

const byte sequence224[] = {
    B00000000
};

const byte sequence225[] = {
    B00000000
};

const byte sequence226[] = {
    B00000000
};

const byte sequence227[] = {
    B00001000
};

const byte sequence228[] = {
    B00000000
};

const byte sequence229[] = {
    B00000000
};

const byte sequence230[] = {
    B00000000
};

const byte sequence231[] = {
//Chase Ver3  Throwing seq. No delay    7T
//      Track 8 comes on W/step 2 and stays on.
    B10000000,
    B10000000,
    B10000000,
    B01000001,
    B01000001,
    B01000001,
    B00100001,
    B00100001,
    B00100001,
    B00010001,
    B00010001,
    B00010001,
    B00001001,
    B00001001,
    B00001001,
    B00000101,
    B00000101,
    B00000101,
    B00000011,
    B00000011,
    B00000011
};

const byte sequence232[] = {
    B00000000
};


const byte sequence233[] = {
    B01000000
};

const byte sequence234[] = {
    B00000000
};


const byte sequence235[] = {
    B00000000
};

const byte sequence236[] = {
    B00000000
};

const byte sequence237[] = {
//*  from                       P255
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000
};

/**************************************************
 *         Do not modify below this line          *
 **************************************************/

const byte sequence238[] = {
// Added an All On sequence 9-8-14 as part of the permenent program. Setting EE  
//  This is the test sequence to see if you can get to all of the sequence.
    B11111111,
    B11111111 
};

const byte sequence239[] = {
//* Save this for the 16th set of 8 Tracks that the SD Card can hold. Slot # EF
    B00000000
};

const byte sequence240[] = {
//*This the seq slot saved for the 16th set of 8 tracks on the SD Card if needed. # F0
//  Sequence # 240 ON are for the SD Card Bank of 8Tracks  Custom programmed seq.
    B00000000
};

const byte sequence241[] = {
//* 1st Bank of 8 Tracks on the SC Card  T1-8  #F1
    B00000000
};

const byte sequence242[] = {
//* 2nd Bank of 8 Tracks on the SC Card  T9-16   F2
    B00000000
};

const byte sequence243[] = {
//* 3rd Bank of 8 Tracks on the SC Card  T17-24   F3
    B00000000
};

const byte sequence244[] = {
//* 4th Bank of 8 Tracks on the SC Card  T      F4
    B00000000
};

const byte sequence245[] = {
//* 5th Bank of 8 Tracks on the SC Card  T     F5
    B00000000
};

const byte sequence246[] = {
//* 6th Bank of 8 Tracks on the SC Card  T      F6
    B00000000
};

const byte sequence247[] = {
//* 7th Bank of 8 Tracks on the SC Card  T  F7
    B00000000
};

const byte sequence248[] = {
//* 8th Bank of 8 Tracks on the SC Card  T   F8    sent 248 to 103
    B00000000
};


const byte sequence249[] = {
//* 9th Bank of 8 Tracks on the SC Card  T   F9
    B00000000
};

const byte sequence250[] = {
//* 10th Bank of 8 Tracks on the SC Card  T    FA
    B00000000
};

const byte sequence251[] = {
//* 11th Bank of 8 Tracks on the SC Card  T    FB
    B00000000
};

const byte sequence252[] = {
//* 12th Bank of 8 Tracks on the SC Card  T    FC
    B00000000
};

const byte sequence253[] = {
//* 13th Bank of 8 Tracks on the SC Card  T    FD
    B00000000
};

const byte sequence254[] = {
//* 14th Bank of 8 Tracks on the SC Card  T     FE
    B00000000
};

const byte sequence255[] = {
//* 15th Bank of 8 Tracks on the SC Card  T   -120    FF
    B00000000
};

const byte *ptrSequences[] = {
    sequence0,
    sequence1,
    sequence2,
    sequence3,
    sequence4,
    sequence5,
    sequence6,
    sequence7,
    sequence8,
    sequence9,
    sequence10,
    sequence11,
    sequence12,
    sequence13,
    sequence14,
    sequence15,
    sequence16,
    sequence17,
    sequence18,
    sequence19,
    sequence20,
    sequence21,
    sequence22,
    sequence23,
    sequence24,
    sequence25,
    sequence26,
    sequence27,
    sequence28,
    sequence29,
    sequence30,
    sequence31,
    sequence32,
    sequence33,
    sequence34,
    sequence35,
    sequence36,
    sequence37,
    sequence38,
    sequence39,
    sequence40,
    sequence41,
    sequence42,
    sequence43,
    sequence44,
    sequence45,
    sequence46,
    sequence47,
    sequence48,
    sequence49,
    sequence50,
    sequence51,
    sequence52,
    sequence53,
    sequence54,
    sequence55,
    sequence56,
    sequence57,
    sequence58,
    sequence59,
    sequence60,
    sequence61,
    sequence62,
    sequence63,
    sequence64,
    sequence65,
    sequence66,
    sequence67,
    sequence68,
    sequence69,
    sequence70,
    sequence71,
    sequence72,
    sequence73,
    sequence74,
    sequence75,
    sequence76,
    sequence77,
    sequence78,
    sequence79,
    sequence80,
    sequence81,
    sequence82,
    sequence83,
    sequence84,
    sequence85,
    sequence86,
    sequence87,
    sequence88,
    sequence89,
    sequence90,
    sequence91,
    sequence92,
    sequence93,
    sequence94,
    sequence95,
    sequence96,
    sequence97,
    sequence98,
    sequence99,
    sequence100,
    sequence101,
    sequence102,
    sequence103,
    sequence104,
    sequence105,
    sequence106,
    sequence107,
    sequence108,
    sequence109,
    sequence110,
    sequence111,
    sequence112,
    sequence113,
    sequence114,
    sequence115,
    sequence116,
    sequence117,
    sequence118,
    sequence119,
    sequence120,
    sequence121,
    sequence122,
    sequence123,
    sequence124,
    sequence125,
    sequence126,
    sequence127,
    sequence128,
    sequence129,
    sequence130,
    sequence131,
    sequence132,
    sequence133,
    sequence134,
    sequence135,
    sequence136,
    sequence137,
    sequence138,
    sequence139,
    sequence140,
    sequence141,
    sequence142,
    sequence143,
    sequence144,
    sequence145,
    sequence146,
    sequence147,
    sequence148,
    sequence149,
    sequence150,
    sequence151,
    sequence152,
    sequence153,
    sequence154,
    sequence155,
    sequence156,
    sequence157,
    sequence158,
    sequence159,
    sequence160,
    sequence161,
    sequence162,
    sequence163,
    sequence164,
    sequence165,
    sequence166,
    sequence167,
    sequence168,
    sequence169,
    sequence170,
    sequence171,
    sequence172,
    sequence173,
    sequence174,
    sequence175,
    sequence176,
    sequence177,
    sequence178,
    sequence179,
    sequence180,
    sequence181,
    sequence182,
    sequence183,
    sequence184,
    sequence185,
    sequence186,
    sequence187,
    sequence188,
    sequence189,
    sequence190,
    sequence191,
    sequence192,
    sequence193,
    sequence194,
    sequence195,
    sequence196,
    sequence197,
    sequence198,
    sequence199,
    sequence200,
    sequence201,
    sequence202,
    sequence203,
    sequence204,
    sequence205,
    sequence206,
    sequence207,
    sequence208,
    sequence209,
    sequence210,
    sequence211,
    sequence212,
    sequence213,
    sequence214,
    sequence215,
    sequence216,
    sequence217,
    sequence218,
    sequence219,
    sequence220,
    sequence221,
    sequence222,
    sequence223,
    sequence224,
    sequence225,
    sequence226,
    sequence227,
    sequence228,
    sequence229,
    sequence230,
    sequence231,
    sequence232,
    sequence233,
    sequence234,
    sequence235,
    sequence236,
    sequence237,
    sequence238,
    sequence239,
    sequence240,
    sequence241,
    sequence242,
    sequence243,
    sequence244,
    sequence245,
    sequence246,
    sequence247,
    sequence248,
    sequence249,
    sequence250,
    sequence251,
    sequence252,
    sequence253,
    sequence254,
    sequence255
};

const word sequenceLengths[] = {
    sizeof sequence0,
    sizeof sequence1,
    sizeof sequence2,
    sizeof sequence3,
    sizeof sequence4,
    sizeof sequence5,
    sizeof sequence6,
    sizeof sequence7,
    sizeof sequence8,
    sizeof sequence9,
    sizeof sequence10,
    sizeof sequence11,
    sizeof sequence12,
    sizeof sequence13,
    sizeof sequence14,
    sizeof sequence15,
    sizeof sequence16,
    sizeof sequence17,
    sizeof sequence18,
    sizeof sequence19,
    sizeof sequence20,
    sizeof sequence21,
    sizeof sequence22,
    sizeof sequence23,
    sizeof sequence24,
    sizeof sequence25,
    sizeof sequence26,
    sizeof sequence27,
    sizeof sequence28,
    sizeof sequence29,
    sizeof sequence30,
    sizeof sequence31,
    sizeof sequence32,
    sizeof sequence33,
    sizeof sequence34,
    sizeof sequence35,
    sizeof sequence36,
    sizeof sequence37,
    sizeof sequence38,
    sizeof sequence39,
    sizeof sequence40,
    sizeof sequence41,
    sizeof sequence42,
    sizeof sequence43,
    sizeof sequence44,
    sizeof sequence45,
    sizeof sequence46,
    sizeof sequence47,
    sizeof sequence48,
    sizeof sequence49,
    sizeof sequence50,
    sizeof sequence51,
    sizeof sequence52,
    sizeof sequence53,
    sizeof sequence54,
    sizeof sequence55,
    sizeof sequence56,
    sizeof sequence57,
    sizeof sequence58,
    sizeof sequence59,
    sizeof sequence60,
    sizeof sequence61,
    sizeof sequence62,
    sizeof sequence63,
    sizeof sequence64,
    sizeof sequence65,
    sizeof sequence66,
    sizeof sequence67,
    sizeof sequence68,
    sizeof sequence69,
    sizeof sequence70,
    sizeof sequence71,
    sizeof sequence72,
    sizeof sequence73,
    sizeof sequence74,
    sizeof sequence75,
    sizeof sequence76,
    sizeof sequence77,
    sizeof sequence78,
    sizeof sequence79,
    sizeof sequence80,
    sizeof sequence81,
    sizeof sequence82,
    sizeof sequence83,
    sizeof sequence84,
    sizeof sequence85,
    sizeof sequence86,
    sizeof sequence87,
    sizeof sequence88,
    sizeof sequence89,
    sizeof sequence90,
    sizeof sequence91,
    sizeof sequence92,
    sizeof sequence93,
    sizeof sequence94,
    sizeof sequence95,
    sizeof sequence96,
    sizeof sequence97,
    sizeof sequence98,
    sizeof sequence99,
    sizeof sequence100,
    sizeof sequence101,
    sizeof sequence102,
    sizeof sequence103,
    sizeof sequence104,
    sizeof sequence105,
    sizeof sequence106,
    sizeof sequence107,
    sizeof sequence108,
    sizeof sequence109,
    sizeof sequence110,
    sizeof sequence111,
    sizeof sequence112,
    sizeof sequence113,
    sizeof sequence114,
    sizeof sequence115,
    sizeof sequence116,
    sizeof sequence117,
    sizeof sequence118,
    sizeof sequence119,
    sizeof sequence120,
    sizeof sequence121,
    sizeof sequence122,
    sizeof sequence123,
    sizeof sequence124,
    sizeof sequence125,
    sizeof sequence126,
    sizeof sequence127,
    sizeof sequence128,
    sizeof sequence129,
    sizeof sequence130,
    sizeof sequence131,
    sizeof sequence132,
    sizeof sequence133,
    sizeof sequence134,
    sizeof sequence135,
    sizeof sequence136,
    sizeof sequence137,
    sizeof sequence138,
    sizeof sequence139,
    sizeof sequence140,
    sizeof sequence141,
    sizeof sequence142,
    sizeof sequence143,
    sizeof sequence144,
    sizeof sequence145,
    sizeof sequence146,
    sizeof sequence147,
    sizeof sequence148,
    sizeof sequence149,
    sizeof sequence150,
    sizeof sequence151,
    sizeof sequence152,
    sizeof sequence153,
    sizeof sequence154,
    sizeof sequence155,
    sizeof sequence156,
    sizeof sequence157,
    sizeof sequence158,
    sizeof sequence159,
    sizeof sequence160,
    sizeof sequence161,
    sizeof sequence162,
    sizeof sequence163,
    sizeof sequence164,
    sizeof sequence165,
    sizeof sequence166,
    sizeof sequence167,
    sizeof sequence168,
    sizeof sequence169,
    sizeof sequence170,
    sizeof sequence171,
    sizeof sequence172,
    sizeof sequence173,
    sizeof sequence174,
    sizeof sequence175,
    sizeof sequence176,
    sizeof sequence177,
    sizeof sequence178,
    sizeof sequence179,
    sizeof sequence180,
    sizeof sequence181,
    sizeof sequence182,
    sizeof sequence183,
    sizeof sequence184,
    sizeof sequence185,
    sizeof sequence186,
    sizeof sequence187,
    sizeof sequence188,
    sizeof sequence189,
    sizeof sequence190,
    sizeof sequence191,
    sizeof sequence192,
    sizeof sequence193,
    sizeof sequence194,
    sizeof sequence195,
    sizeof sequence196,
    sizeof sequence197,
    sizeof sequence198,
    sizeof sequence199,
    sizeof sequence200,
    sizeof sequence201,
    sizeof sequence202,
    sizeof sequence203,
    sizeof sequence204,
    sizeof sequence205,
    sizeof sequence206,
    sizeof sequence207,
    sizeof sequence208,
    sizeof sequence209,
    sizeof sequence210,
    sizeof sequence211,
    sizeof sequence212,
    sizeof sequence213,
    sizeof sequence214,
    sizeof sequence215,
    sizeof sequence216,
    sizeof sequence217,
    sizeof sequence218,
    sizeof sequence219,
    sizeof sequence220,
    sizeof sequence221,
    sizeof sequence222,
    sizeof sequence223,
    sizeof sequence224,
    sizeof sequence225,
    sizeof sequence226,
    sizeof sequence227,
    sizeof sequence228,
    sizeof sequence229,
    sizeof sequence230,
    sizeof sequence231,
    sizeof sequence232,
    sizeof sequence233,
    sizeof sequence234,
    sizeof sequence235,
    sizeof sequence236,
    sizeof sequence237,
    sizeof sequence238,
    sizeof sequence239,
    sizeof sequence240,
    sizeof sequence241,
    sizeof sequence242,
    sizeof sequence243,
    sizeof sequence244,
    sizeof sequence245,
    sizeof sequence246,
    sizeof sequence247,
    sizeof sequence248,
    sizeof sequence249,
    sizeof sequence250,
    sizeof sequence251,
    sizeof sequence252,
    sizeof sequence253,
    sizeof sequence254,
    sizeof sequence255
};